{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Kumud/OneDrive/course/New%20Project/lms/src/app/dashboard/settings/page.tsx"],"sourcesContent":["// src/app/dashboard/settings/page.tsx\r\n'use client'\r\n\r\nimport { useState, ChangeEvent } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Save, User, Mail, Key, Bell, Moon, Sun, Upload, Trash2 } from 'lucide-react'\r\nimport { toast } from 'react-toastify'\r\nimport { useTheme } from '@/context/ThemeContext'\r\nimport { useAuth } from '@/context/AuthContext'\r\n\r\nexport default function SettingsPage() {\r\n  const { theme, toggleTheme } = useTheme()\r\n  const { user } = useAuth()\r\n  \r\n  const [activeTab, setActiveTab] = useState('profile')\r\n  const [profileImage, setProfileImage] = useState<string | null>(null)\r\n  const [imageFile, setImageFile] = useState<File | null>(null)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  \r\n  // Form states\r\n  const [profileForm, setProfileForm] = useState({\r\n    firstName: user?.firstName || '',\r\n    lastName: user?.lastName || '',\r\n    email: user?.email || '',\r\n    bio: 'Learning enthusiast passionate about web development and design. Currently focusing on React and modern JavaScript.',\r\n  })\r\n  \r\n  const [passwordForm, setPasswordForm] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  })\r\n  \r\n  const [notificationSettings, setNotificationSettings] = useState({\r\n    email: {\r\n      courseUpdates: true,\r\n      assignments: true,\r\n      announcements: true,\r\n      messages: false,\r\n    },\r\n    push: {\r\n      courseUpdates: false,\r\n      assignments: true,\r\n      announcements: true,\r\n      messages: true,\r\n    }\r\n  })\r\n  \r\n  // Handle profile image upload\r\n  const handleImageUpload = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0]\r\n      setImageFile(file)\r\n      const reader = new FileReader()\r\n      reader.onload = (event) => {\r\n        if (event.target) {\r\n          setProfileImage(event.target.result as string)\r\n        }\r\n      }\r\n      reader.readAsDataURL(file)\r\n    }\r\n  }\r\n  \r\n  // Handle profile form changes\r\n  const handleProfileChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target\r\n    setProfileForm(prev => ({ ...prev, [name]: value }))\r\n  }\r\n  \r\n  // Handle password form changes\r\n  const handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setPasswordForm(prev => ({ ...prev, [name]: value }))\r\n  }\r\n  \r\n  // Handle notification toggle\r\n  const handleNotificationToggle = (type: 'email' | 'push', setting: string) => {\r\n    setNotificationSettings(prev => ({\r\n      ...prev,\r\n      [type]: {\r\n        ...prev[type],\r\n        [setting]: !prev[type][setting as keyof typeof prev[typeof type]]\r\n      }\r\n    }))\r\n  }\r\n  \r\n  // Handle save profile\r\n  const handleSaveProfile = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsSaving(true)\r\n    \r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n      toast.success('Profile updated successfully')\r\n    } catch (error) {\r\n      toast.error('Failed to update profile')\r\n      console.error(error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n  \r\n  // Handle save password\r\n  const handleSavePassword = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\r\n      toast.error('New passwords do not match')\r\n      return\r\n    }\r\n    \r\n    setIsSaving(true)\r\n    \r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n      toast.success('Password updated successfully')\r\n      setPasswordForm({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      })\r\n    } catch (error) {\r\n      toast.error('Failed to update password')\r\n      console.error(error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n  \r\n  // Handle save notification settings\r\n  const handleSaveNotifications = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsSaving(true)\r\n    \r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n      toast.success('Notification settings updated')\r\n    } catch (error) {\r\n      toast.error('Failed to update notification settings')\r\n      console.error(error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  // Animation variants\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1\r\n      }\r\n    }\r\n  }\r\n  \r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    show: { opacity: 1, y: 0, transition: { duration: 0.4 } }\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto\">\r\n      <motion.div \r\n        className=\"mb-8\"\r\n        initial={{ opacity: 0, y: -10 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.4 }}\r\n      >\r\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Settings</h1>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">Manage your account preferences</p>\r\n      </motion.div>\r\n      \r\n      <div className=\"flex flex-col md:flex-row gap-8\">\r\n        {/* Sidebar navigation */}\r\n        <motion.div \r\n          className=\"md:w-64\"\r\n          initial={{ opacity: 0, x: -20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ duration: 0.4 }}\r\n        >\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 overflow-hidden\">\r\n            <nav className=\"p-2\">\r\n              <button\r\n                onClick={() => setActiveTab('profile')}\r\n                className={`flex items-center w-full px-3 py-2 rounded-md text-sm ${\r\n                  activeTab === 'profile' \r\n                    ? 'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-400' \r\n                    : 'text-gray-700 hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-gray-700'\r\n                }`}\r\n              >\r\n                <User className=\"mr-3 h-5 w-5\" />\r\n                Profile\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('password')}\r\n                className={`flex items-center w-full px-3 py-2 rounded-md text-sm ${\r\n                  activeTab === 'password' \r\n                    ? 'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-400' \r\n                    : 'text-gray-700 hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-gray-700'\r\n                }`}\r\n              >\r\n                <Key className=\"mr-3 h-5 w-5\" />\r\n                Password & Security\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('notifications')}\r\n                className={`flex items-center w-full px-3 py-2 rounded-md text-sm ${\r\n                  activeTab === 'notifications' \r\n                    ? 'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-400' \r\n                    : 'text-gray-700 hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-gray-700'\r\n                }`}\r\n              >\r\n                <Bell className=\"mr-3 h-5 w-5\" />\r\n                Notifications\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('appearance')}\r\n                className={`flex items-center w-full px-3 py-2 rounded-md text-sm ${\r\n                  activeTab === 'appearance' \r\n                    ? 'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-400' \r\n                    : 'text-gray-700 hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-gray-700'\r\n                }`}\r\n              >\r\n                {theme === 'dark' ? (\r\n                  <Moon className=\"mr-3 h-5 w-5\" />\r\n                ) : (\r\n                  <Sun className=\"mr-3 h-5 w-5\" />\r\n                )}\r\n                Appearance\r\n              </button>\r\n            </nav>\r\n          </div>\r\n        </motion.div>\r\n        \r\n        {/* Content area */}\r\n        <motion.div \r\n          className=\"flex-1\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 0.4 }}\r\n        >\r\n          {/* Profile settings */}\r\n          {activeTab === 'profile' && (\r\n            <motion.div\r\n              variants={containerVariants}\r\n              initial=\"hidden\"\r\n              animate=\"show\"\r\n              className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-6\"\r\n            >\r\n              <motion.h2 \r\n                variants={itemVariants}\r\n                className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6\"\r\n              >\r\n                Profile Settings\r\n              </motion.h2>\r\n              \r\n              <form onSubmit={handleSaveProfile}>\r\n                <motion.div variants={itemVariants} className=\"mb-6\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Profile Image\r\n                  </label>\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"relative\">\r\n                      {profileImage ? (\r\n                        <img \r\n                          src={profileImage} \r\n                          alt=\"Profile preview\" \r\n                          className=\"w-24 h-24 rounded-full object-cover\"\r\n                        />\r\n                      ) : (\r\n                        <div className=\"w-24 h-24 rounded-full bg-blue-100 dark:bg-blue-900/30 flex items-center justify-center text-blue-600 dark:text-blue-400 text-xl font-semibold\">\r\n                          {profileForm.firstName[0]}{profileForm.lastName[0]}\r\n                        </div>\r\n                      )}\r\n                      <label className=\"absolute bottom-0 right-0 bg-blue-600 p-1.5 rounded-full cursor-pointer\">\r\n                        <Upload size={16} className=\"text-white\" />\r\n                        <input \r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          className=\"hidden\"\r\n                          onChange={handleImageUpload}\r\n                        />\r\n                      </label>\r\n                    </div>\r\n                    {profileImage && (\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setProfileImage(null)\r\n                          setImageFile(null)\r\n                        }}\r\n                        className=\"ml-4 text-sm text-red-600 dark:text-red-400 flex items-center\"\r\n                      >\r\n                        <Trash2 size={16} className=\"mr-1\" />\r\n                        Remove\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </motion.div>\r\n                \r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                  <motion.div variants={itemVariants}>\r\n                    <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                      First Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"firstName\"\r\n                      name=\"firstName\"\r\n                      value={profileForm.firstName}\r\n                      onChange={handleProfileChange}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                      required\r\n                    />\r\n                  </motion.div>\r\n                  \r\n                  <motion.div variants={itemVariants}>\r\n                    <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                      Last Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"lastName\"\r\n                      name=\"lastName\"\r\n                      value={profileForm.lastName}\r\n                      onChange={handleProfileChange}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                      required\r\n                    />\r\n                  </motion.div>\r\n                </div>\r\n                \r\n                <motion.div variants={itemVariants} className=\"mt-6\">\r\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                    Email\r\n                  </label>\r\n                  <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                    <div className=\"relative flex items-stretch flex-grow\">\r\n                      <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        <Mail className=\"h-5 w-5 text-gray-400\" />\r\n                      </div>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={profileForm.email}\r\n                        onChange={handleProfileChange}\r\n                        className=\"w-full pl-10 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\r\n                    To change your email, please contact support.\r\n                  </p>\r\n                </motion.div>\r\n                \r\n                <motion.div variants={itemVariants} className=\"mt-6\">\r\n                  <label htmlFor=\"bio\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                    Bio\r\n                  </label>\r\n                  <textarea\r\n                    id=\"bio\"\r\n                    name=\"bio\"\r\n                    rows={4}\r\n                    value={profileForm.bio}\r\n                    onChange={handleProfileChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                  ></textarea>\r\n                </motion.div>\r\n                \r\n                <motion.div variants={itemVariants} className=\"mt-8 flex justify-end\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={isSaving}\r\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n                  >\r\n                    {isSaving ? (\r\n                      <>\r\n                        <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                        </svg>\r\n                        Saving...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Save className=\"mr-2 h-4 w-4\" /> Save Changes\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                </motion.div>\r\n              </form>\r\n            </motion.div>\r\n          )}\r\n          \r\n          {/* Password settings */}\r\n          {activeTab === 'password' && (\r\n            <motion.div\r\n              variants={containerVariants}\r\n              initial=\"hidden\"\r\n              animate=\"show\"\r\n              className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-6\"\r\n            >\r\n              <motion.h2 \r\n                variants={itemVariants}\r\n                className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6\"\r\n              >\r\n                Password & Security\r\n              </motion.h2>\r\n              \r\n              <form onSubmit={handleSavePassword}>\r\n                <motion.div variants={itemVariants} className=\"mb-6\">\r\n                  <label htmlFor=\"currentPassword\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                    Current Password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"currentPassword\"\r\n                    name=\"currentPassword\"\r\n                    value={passwordForm.currentPassword}\r\n                    onChange={handlePasswordChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                    required\r\n                  />\r\n                </motion.div>\r\n                \r\n                <motion.div variants={itemVariants} className=\"mb-6\">\r\n                  <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                    New Password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"newPassword\"\r\n                    name=\"newPassword\"\r\n                    value={passwordForm.newPassword}\r\n                    onChange={handlePasswordChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                    required\r\n                    minLength={8}\r\n                  />\r\n                  <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\r\n                    Minimum 8 characters with at least one uppercase letter, number, and special character.\r\n                  </p>\r\n                </motion.div>\r\n                \r\n                <motion.div variants={itemVariants} className=\"mb-6\">\r\n                  <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                    Confirm New Password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    value={passwordForm.confirmPassword}\r\n                    onChange={handlePasswordChange}\r\n                    className={`w-full px-3 py-2 border ${\r\n                      passwordForm.newPassword && passwordForm.confirmPassword && \r\n                      passwordForm.newPassword !== passwordForm.confirmPassword\r\n                        ? 'border-red-300 dark:border-red-500'\r\n                        : 'border-gray-300 dark:border-gray-600'\r\n                    } rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white`}\r\n                    required\r\n                  />\r\n                  {passwordForm.newPassword && passwordForm.confirmPassword && \r\n                   passwordForm.newPassword !== passwordForm.confirmPassword && (\r\n                    <p className=\"mt-1 text-xs text-red-600 dark:text-red-400\">\r\n                      Passwords do not match\r\n                    </p>\r\n                  )}\r\n                </motion.div>\r\n                \r\n                <motion.div variants={itemVariants} className=\"mt-8 flex justify-end\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={isSaving}\r\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n                  >\r\n                    {isSaving ? (\r\n                      <>\r\n                        <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                        </svg>\r\n                        Updating...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Save className=\"mr-2 h-4 w-4\" /> Update Password\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                </motion.div>\r\n              </form>\r\n            </motion.div>\r\n          )}\r\n          \r\n          {/* Notification settings */}\r\n          {activeTab === 'notifications' && (\r\n            <motion.div\r\n              variants={containerVariants}\r\n              initial=\"hidden\"\r\n              animate=\"show\"\r\n              className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-6\"\r\n            >\r\n              <motion.h2 \r\n                variants={itemVariants}\r\n                className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6\"\r\n              >\r\n                Notification Settings\r\n              </motion.h2>\r\n              \r\n              <form onSubmit={handleSaveNotifications}>\r\n                <motion.div variants={itemVariants} className=\"mb-8\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Email Notifications</h3>\r\n                  \r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Course Updates</h4>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Receive email notifications when a course is updated</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          className=\"sr-only peer\"\r\n                          checked={notificationSettings.email.courseUpdates}\r\n                          onChange={() => handleNotificationToggle('email', 'courseUpdates')}\r\n                        />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Assignments</h4>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Receive email reminders about upcoming assignments</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          className=\"sr-only peer\"\r\n                          checked={notificationSettings.email.assignments}\r\n                          onChange={() => handleNotificationToggle('email', 'assignments')}\r\n                        />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Announcements</h4>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Receive emails about platform announcements</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          className=\"sr-only peer\"\r\n                          checked={notificationSettings.email.announcements}\r\n                          onChange={() => handleNotificationToggle('email', 'announcements')}\r\n                        />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Messages</h4>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Receive emails when someone sends you a message</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          className=\"sr-only peer\"\r\n                          checked={notificationSettings.email.messages}\r\n                          onChange={() => handleNotificationToggle('email', 'messages')}\r\n                        />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n                \r\n                <motion.div variants={itemVariants}>\r\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Push Notifications</h3>\r\n                  \r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Course Updates</h4>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Receive push notifications when a course is updated</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          className=\"sr-only peer\"\r\n                          checked={notificationSettings.push.courseUpdates}\r\n                          onChange={() => handleNotificationToggle('push', 'courseUpdates')}\r\n                        />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Assignments</h4>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Receive push notifications about upcoming assignments</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          className=\"sr-only peer\"\r\n                          checked={notificationSettings.push.assignments}\r\n                          onChange={() => handleNotificationToggle('push', 'assignments')}\r\n                        />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Announcements</h4>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Receive push notifications about platform announcements</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          className=\"sr-only peer\"\r\n                          checked={notificationSettings.push.announcements}\r\n                          onChange={() => handleNotificationToggle('push', 'announcements')}\r\n                        />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Messages</h4>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Receive push notifications when someone sends you a message</p>\r\n                      </div>\r\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          className=\"sr-only peer\"\r\n                          checked={notificationSettings.push.messages}\r\n                          onChange={() => handleNotificationToggle('push', 'messages')}\r\n                        />\r\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n                \r\n                <motion.div variants={itemVariants} className=\"mt-8 flex justify-end\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={isSaving}\r\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n                  >\r\n                    {isSaving ? (\r\n                      <>\r\n                        <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                        </svg>\r\n                        Saving...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Save className=\"mr-2 h-4 w-4\" /> Save Preferences\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                </motion.div>\r\n              </form>\r\n            </motion.div>\r\n          )}\r\n          \r\n          {/* Appearance settings */}\r\n          {activeTab === 'appearance' && (\r\n            <motion.div\r\n              variants={containerVariants}\r\n              initial=\"hidden\"\r\n              animate=\"show\"\r\n              className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-6\"\r\n            >\r\n              <motion.h2 \r\n                variants={itemVariants}\r\n                className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6\"\r\n              >\r\n                Appearance Settings\r\n              </motion.h2>\r\n              \r\n              <motion.div variants={itemVariants} className=\"mb-6\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Theme</h3>\r\n                \r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div \r\n                    className={`relative rounded-lg overflow-hidden cursor-pointer border-2 ${\r\n                      theme === 'light' ? 'border-blue-500' : 'border-transparent hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                    onClick={() => theme === 'dark' && toggleTheme()}\r\n                  >\r\n                    <div className=\"bg-white p-4\">\r\n                      <div className=\"flex items-center justify-between mb-4\">\r\n                        <div className=\"h-4 w-24 bg-gray-200 rounded\"></div>\r\n                        <div className=\"h-4 w-4 bg-gray-200 rounded\"></div>\r\n                      </div>\r\n                      <div className=\"h-3 w-full bg-gray-100 rounded mb-2\"></div>\r\n                      <div className=\"h-3 w-full bg-gray-100 rounded mb-2\"></div>\r\n                      <div className=\"h-3 w-3/4 bg-gray-100 rounded\"></div>\r\n                      <div className=\"mt-4 flex justify-between\">\r\n                        <div className=\"h-8 w-24 bg-blue-500 rounded\"></div>\r\n                        <div className=\"h-8 w-8 bg-gray-200 rounded-full\"></div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-60 opacity-0 hover:opacity-100 transition-opacity\">\r\n                      {theme === 'light' ? (\r\n                        <span className=\"text-blue-600 font-medium\">Current theme</span>\r\n                      ) : (\r\n                        <span className=\"text-gray-800 font-medium\">Switch to light</span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div \r\n                    className={`relative rounded-lg overflow-hidden cursor-pointer border-2 ${\r\n                      theme === 'dark' ? 'border-blue-500' : 'border-transparent hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                    onClick={() => theme === 'light' && toggleTheme()}\r\n                  >\r\n                    <div className=\"bg-gray-900 p-4\">\r\n                      <div className=\"flex items-center justify-between mb-4\">\r\n                        <div className=\"h-4 w-24 bg-gray-700 rounded\"></div>\r\n                        <div className=\"h-4 w-4 bg-gray-700 rounded\"></div>\r\n                      </div>\r\n                      <div className=\"h-3 w-full bg-gray-800 rounded mb-2\"></div>\r\n                      <div className=\"h-3 w-full bg-gray-800 rounded mb-2\"></div>\r\n                      <div className=\"h-3 w-3/4 bg-gray-800 rounded\"></div>\r\n                      <div className=\"mt-4 flex justify-between\">\r\n                        <div className=\"h-8 w-24 bg-blue-600 rounded\"></div>\r\n                        <div className=\"h-8 w-8 bg-gray-700 rounded-full\"></div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-60 opacity-0 hover:opacity-100 transition-opacity\">\r\n                      {theme === 'dark' ? (\r\n                        <span className=\"text-blue-400 font-medium\">Current theme</span>\r\n                      ) : (\r\n                        <span className=\"text-gray-200 font-medium\">Switch to dark</span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"mt-6 flex items-center justify-center\">\r\n                  <button\r\n                    onClick={toggleTheme}\r\n                    className=\"flex items-center px-4 py-2 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-md hover:bg-blue-200 dark:hover:bg-blue-800/30\"\r\n                  >\r\n                    {theme === 'dark' ? (\r\n                      <>\r\n                        <Sun className=\"mr-2 h-5 w-5\" /> Switch to Light Mode\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Moon className=\"mr-2 h-5 w-5\" /> Switch to Dark Mode\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </motion.div>\r\n              \r\n              <motion.div variants={itemVariants} className=\"pt-6 border-t border-gray-200 dark:border-gray-700\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Accessibility</h3>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label htmlFor=\"fontSize\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                      Font Size\r\n                    </label>\r\n                    <select\r\n                      id=\"fontSize\"\r\n                      name=\"fontSize\"\r\n                      className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                      defaultValue=\"medium\"\r\n                    >\r\n                      <option value=\"small\">Small</option>\r\n                      <option value=\"medium\">Medium</option>\r\n                      <option value=\"large\">Large</option>\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Reduce Motion</h4>\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Minimize animations</p>\r\n                    </div>\r\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        className=\"sr-only peer\"\r\n                      />\r\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">High Contrast</h4>\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Increase contrast for better readability</p>\r\n                    </div>\r\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        className=\"sr-only peer\"\r\n                      />\r\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            </motion.div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}