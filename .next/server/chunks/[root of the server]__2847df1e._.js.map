{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aditk/Downloads/LMS_NEW/lms/src/models/User.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\ninterface IUser extends Document {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  createdAt: Date;\n}\n\nconst UserSchema: Schema = new Schema({\n  email: { type: String, required: true, unique: true },\n  password: { type: String, required: true },\n  firstName: { type: String, required: true },\n  lastName: { type: String },\n  role: { type: String, required: true },\n},{timestamps:true});\n\nexport default mongoose.models.User || mongoose.model<IUser>('User', UserSchema);"],"names":[],"mappings":";;;AAAA;;AAWA,MAAM,aAAqB,IAAI,yGAAA,CAAA,SAAM,CAAC;IACpC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,WAAW;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC1C,UAAU;QAAE,MAAM;IAAO;IACzB,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;AACvC,GAAE;IAAC,YAAW;AAAI;uCAEH,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAQ,QAAQ","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aditk/Downloads/LMS_NEW/lms/src/lib/db/connectDB.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst connectDB = async () => {\n  if (mongoose.connections[0].readyState) {\n    return;\n  }\n\n  try {\n    await mongoose.connect(process.env.MONGODB_URI || '', {\n      // useNewUrlParser: true,\n      // useUnifiedTopology: true,\n    });\n    console.log('MongoDB connected');\n  } catch (error) {\n    console.error('MongoDB connection error:', error);\n  }\n};\n\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY;IAChB,IAAI,yGAAA,CAAA,UAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE;QACtC;IACF;IAEA,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,IAAI,IAAI;QAGtD;QACA,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;IAC7C;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aditk/Downloads/LMS_NEW/lms/src/app/api/auth/register/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport bcrypt from 'bcryptjs';\nimport mongoose from 'mongoose';\nimport User from '@/models/User';\nimport connectDB from '@/lib/db/connectDB';\n\nexport async function POST(request: Request) {\n  await connectDB();\n\n  try {\n    const body = await request.json();\n    const { email, password, firstName, lastName=\"\", role } = body;\n\n    // Validate inputs\n    if ((!email || !password || !firstName || !role)) {\n      return NextResponse.json(\n        { success: false, message: \"Missing required fields\" },\n        { status: 400 }\n      );\n    }\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return NextResponse.json(\n        { success: false, message: 'User already exists' },\n        { status: 400 }\n      );\n    }\n\n    // Hash the password\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    // Create new user\n    const user = new User({\n      email,\n      password: hashedPassword,\n      firstName,\n      lastName,\n      role,\n    });\n    await user.save();\n\n    return NextResponse.json({\n      success: true,\n      user: {\n        id: user._id,\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        role: user.role,\n        createdAt: user.createdAt,\n      },\n    });\n  } catch (error) {\n    console.error('Registration error:', error);\n    return NextResponse.json(\n      { success: false, message: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AACA;;;;;AAEO,eAAe,KAAK,OAAgB;IACzC,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAS,AAAD;IAEd,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAS,EAAE,EAAE,IAAI,EAAE,GAAG;QAE1D,kBAAkB;QAClB,IAAK,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa,CAAC,MAAO;YAChD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,SAAS;YAA0B,GACrD;gBAAE,QAAQ;YAAI;QAElB;QAEA,+BAA+B;QAC/B,MAAM,eAAe,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,SAAS;YAAsB,GACjD;gBAAE,QAAQ;YAAI;QAElB;QAEA,oBAAoB;QACpB,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,kBAAkB;QAClB,MAAM,OAAO,IAAI,uHAAA,CAAA,UAAI,CAAC;YACpB;YACA,UAAU;YACV;YACA;YACA;QACF;QACA,MAAM,KAAK,IAAI;QAEf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ,IAAI,KAAK,GAAG;gBACZ,OAAO,KAAK,KAAK;gBACjB,WAAW,KAAK,SAAS;gBACzB,UAAU,KAAK,QAAQ;gBACvB,MAAM,KAAK,IAAI;gBACf,WAAW,KAAK,SAAS;YAC3B;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,SAAS;QAAwB,GACnD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}